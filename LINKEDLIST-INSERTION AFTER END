/ INSERTION AFTER END ]



#include <stdio.h>
#include <stdlib.h>
struct Node
{
    int data;
    struct Node *next;
};

void linkedlistTraversal(struct Node *ptr)
{
    while (ptr != NULL) {
        printf("array is %d\n", ptr->data);
        ptr = ptr->next;
    }
}

struct Node * insertionAtfirst(struct Node * head, int data){
 struct Node * ptr = (struct Node *)malloc(sizeof (struct Node));
 ptr->next = head;
 ptr->data = data;
 head = ptr;

 return ptr;
}

struct Node * insertAfterNode(struct Node * head,struct Node * prevNode, int data){
     struct Node * ptr = (struct Node *)malloc(sizeof (struct Node));
     ptr->data = data;
     ptr->next = prevNode->next;
     prevNode->next = ptr;
     return head;
     
}



int main()
{
    struct Node *head;
    struct Node *second;
    struct Node *third;
    struct Node *fourth;

    head = (struct Node *)malloc(sizeof(struct Node));
    second = (struct Node *)malloc(sizeof(struct Node));
    third = (struct Node *)malloc(sizeof(struct Node));
    fourth = (struct Node *)malloc(sizeof(struct Node));

    head->data = 7;
    head->next = second;

    second->data = 8;
    second->next = third;

    third->data = 10;
    third->next = fourth;

    fourth->data = 89;
    fourth->next = NULL;
    printf("Linklist before insertion");
    linkedlistTraversal(head);
  
   head = insertAfterNode(head,second, 45);
    printf("linklist after insertion");
    linkedlistTraversal(head);


    return 0;
}
